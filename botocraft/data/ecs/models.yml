---
primary:
  Service:
    arn_key: serviceArn
    name_key: serviceName
    input_shapes:
      - CreateServiceRequest
      - UpdateServiceRequest
    fields:
      serviceName:
        required: true
      taskDefinition:
        required: true
      roleArn:
        required: true
      clusterArn:
        required: true
      desiredCount:
        required: true
        default: 1
      launchType:
        required: true
        default: >-
          "FARGATE"
      schedulingStrategy:
        required: true
        default: >-
          "REPLICA"
    properties:
      pk:
        docstring: >-
          The primary key of the service.  This can be used to get the service
          with the :py:meth:`botocraft.services.ecs.ServiceManager.get` method,
          or to do
          :py:meth:`botocraft.services.ecs.ServiceManager.partial_update`.
        mapping:
          mapping:
            service: serviceName
            cluster: clusterArn
  Cluster:
    primary_key: clusterArn
    arn_key: clusterArn
    name_key: clusterName
    input_shapes:
      - CreateClusterRequest
    fields:
      clusterName:
        required: true
        default: >-
          "default"
  TaskDefinition:
    primary_key: taskDefinitionArn
    arn_key: taskDefinitionArn
    input_shapes:
      - RegisterTaskDefinitionRequest
    fields:
      family:
        required: true
      taskRoleArn:
        required: true
      containerDefinitions:
        required: true
      networkMode:
        default: >-
          "awsvpc"
  ContainerInstance:
    primary_key: containerInstanceArn
    arn_key: containerInstanceArn
    readonly: true
secondary:
  Deployment:
    readonly: true
  ContainerDefinition:
    fields:
      name:
        required: true
      image:
        required: true
      essential:
        required: true
        default: >-
          True
  LoadBalancer:
    alternate_name: LoadBalancerConfiguration
