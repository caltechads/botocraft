---
Service:
  mixins:
    - name: ECSServiceManagerMixin
      import_path: botocraft.mixins.ecs
  methods:
    create:
      boto3_name: create_service
      docstring: >-
        Create an ECS service.
      args:
        cluster:
          attribute: clusterArn
        role:
          attribute: roleArn
    delete:
      boto3_name: delete_service
      docstring: >-
        Delete an ECS service.
      args:
        force:
          default: "False"
    get:
      boto3_name: describe_services
      args:
        services:
          rename: service
          required: true
          python_type: str
          source_arg: "[service]"
          docstring: >-
            The name or full Amazon Resource Name (ARN) of the service to
            describe.
    get_many:
      boto3_name: describe_services
      args:
        cluster:
          default: >-
            "default"
    list:
      boto3_name: list_services
      response_attr: serviceArns
      decorators:
        - name: ecs_services_only
          import_path: botocraft.mixins.ecs
    update:
      boto3_name: update_service
      args:
        cluster:
          attribute: clusterArn
        service:
          attribute: serviceName
        forceNewDeployment:
          explicit: true
          default: "False"
    partial_update:
      boto3_name: update_service
      docstring: >-
        Update individual attributes of an ECS service.
      args:
        service:
          required: true
        forceNewDeployment:
          default: "False"
Cluster:
  methods:
    create:
      boto3_name: create_cluster
      docstring: >-
        Create an ECS cluster.
    delete:
      boto3_name: delete_cluster
      docstring: >-
        Delete an ECS cluster.
    get:
      boto3_name: describe_clusters
      args:
        clusters:
          rename: cluster
          required: true
          python_type: str
          source_arg: "[cluster]"
          docstring: >-
            The name or full Amazon Resource Name (ARN) of the cluster to
            describe.
        include:
          default: >-
            ["ATTACHMENTS", "CONFIGURATIONS", "SETTINGS", "STATISTICS", "TAGS"]
    get_many:
      boto3_name: describe_clusters
      args:
        include:
          default: >-
            ["ATTACHMENTS", "CONFIGURATIONS", "SETTINGS", "STATISTICS", "TAGS"]
    list:
      boto3_name: list_clusters
      response_attr: clusterArns
      decorators:
        - name: ecs_clusters_only
          import_path: botocraft.mixins.ecs
    update:
      boto3_name: update_cluster
      docstring: >-
        Update an ECS cluster.
      args:
        cluster:
          attribute: clusterName
    partial_update:
      boto3_name: update_cluster
      docstring: >-
        Update individual attributes of an ECS cluster.
      args:
        service:
          required: true
        cluster:
          default: >-
            "default"
        forceNewDeployment:
          default: "False"
TaskDefinition:
  mixins:
    - name: TaskDefinitionManagerMixin
      import_path: botocraft.mixins.ecs
  methods:
    create:
      boto3_name: register_task_definition
    delete:
      boto3_name: deregister_task_definition
    get:
      boto3_name: describe_task_definition
    list:
      boto3_name: list_task_definitions
      response_attr: taskDefinitionArns
      decorators:
        - name: ecs_task_definitions_only
          import_path: botocraft.mixins.ecs
    update:
      boto3_name: register_task_definition
ContainerInstance:
  readonly: true
  methods:
    get:
      boto3_name: describe_container_instances
      args:
        cluster:
          default: >-
            "default"
        containerInstances:
          rename: containerInstance
          required: true
          python_type: str
          source_arg: "[containerInstance]"
          docstring: >-
            The container instance ID or full Amazon Resource Name (ARN) entry
            for the container instance you want to describe.
        include:
          default: >-
            ["TAGS", "CONTAINER_INSTANCE_HEALTH"]
    get_many:
      boto3_name: describe_container_instances
      args:
        cluster:
          default: >-
            "default"
        include:
          default: >-
            ["TAGS", "CONTAINER_INSTANCE_HEALTH"]
    list:
      boto3_name: list_container_instances
      response_attr: containerInstanceArns
      decorators:
        - name: ecs_container_instances_only
          import_path: botocraft.mixins.ecs
      args:
        cluster:
          default: >-
            "default"
    list_tasks:
      boto3_name: list_tasks
      response_attr: taskArns
      mixins:
        - name: ecs_container_instance_tasks_only
          import_path: botocraft.mixins.ecs
      args:
        containerInstance:
          required: true
          python_type: str
          source_arg: "[containerInstance]"
Task:
  methods:
    get:
      boto3_name: describe_tasks
      decorators:
        - name: ecs_task_populate_taskDefinition
          import_path: botocraft.mixins.ecs
      args:
        cluster:
          default: >-
            "default"
        tasks:
          rename: task
          required: true
          python_type: str
          source_arg: "[task]"
          docstring: >-
            The task ID or full Amazon Resource Name (ARN) entry of the task
            that you want to describe.
        include:
          default: >-
            ["TAGS"]
    get_many:
      boto3_name: describe_tasks
      decorators:
        - name: ecs_task_populate_taskDefinitions
          import_path: botocraft.mixins.ecs
      args:
        cluster:
          default: >-
            "default"
        include:
          default: >-
            ["TAGS"]
    list:
      boto3_name: list_tasks
      response_attr: taskArns
      decorators:
        - name: ecs_tasks_only
          import_path: botocraft.mixins.ecs
      args:
        cluster:
          default: >-
            "default"
    create:
      boto3_name: run_task
      response_attr: tasks
      args:
        cluster:
          attribute: clusterArn
    delete:
      boto3_name: stop_task
